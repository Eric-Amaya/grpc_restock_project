image: docker:latest
variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

stages:
  - build
  - test
  - deploy

services:
  - docker:24.0.5-dind

before_script:
  - echo "Logging in to Docker registry..."
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
  - echo "Login successful."
  - echo "Enabling Docker BuildKit..."
  - export DOCKER_BUILDKIT=1

build-and-push:
  stage: build
  script:
    - echo "Building Docker images..."
    - docker build -t ericamaya29/api-gateway:latest ./grpc-nest-proto-api-gateway-main
    - docker build -t ericamaya29/auth-service:latest ./grpc-nest-proto-auth-ms-main
    - docker build -t ericamaya29/order-service:latest ./grpc-nest-proto-order-ms-main
    - docker build -t ericamaya29/product-service:latest ./grpc-nest-proto-product-ms-main
    - echo "Build completed."
    - echo "Pushing Docker images to the registry..."
    - docker push ericamaya29/api-gateway:latest
    - docker push ericamaya29/auth-service:latest
    - docker push ericamaya29/order-service:latest
    - docker push ericamaya29/product-service:latest
    - echo "Images pushed successfully."
    - echo "Listing all Docker images..."
    - docker images
  timeout: 20m

test:
  stage: test
  script:
    - echo "Starting services using Docker Compose..."
    - docker-compose -f docker-compose.yaml up -d
    - echo "Running tests for api-gateway..."
    - docker-compose -f docker-compose.yaml exec api-gateway npm test -- --coverage
    - echo "Running tests for auth-service..."
    - docker-compose -f docker-compose.yaml exec auth-service npm test -- --coverage
    - echo "Running tests for order-service..."
    - docker-compose -f docker-compose.yaml exec order-service npm test -- --coverage
    - echo "Running tests for product-service..."
    - docker-compose -f docker-compose.yaml exec product-service npm test -- --coverage
    - echo "Tests completed. Saving coverage reports..."

deploy:
  stage: deploy
  script:
    - echo "Logging in to Docker registry for deployment..."
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
    - echo "Login successful."
    - echo "Pulling latest Docker images..."
    - docker-compose -f docker-compose.yaml pull
    - echo "Starting services with the latest images..."
    - docker-compose -f docker-compose.yaml up -d
    - echo "Deployment completed successfully."
  only:
    - main
