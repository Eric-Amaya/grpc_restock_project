version: '3.9'

services:
  api-gateway:
    image: ericamaya29/api-gateway:latest
    container_name: api-gateway-restock
    ports:
      - '8000:8000'
    environment:
      - NODE_ENV=production
      - AUTH_SERVICE_URL=auth-service:5051
      - ORDER_SERVICE_URL=order-service:5052
      - PRODUCT_SERVICE_URL=product-service:5053
    depends_on:
      - auth-service
      - order-service
      - product-service

  auth-service:
    image: ericamaya29/auth-service:latest
    container_name: auth-service
    ports:
      - '5051:5051'
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=ms_auth
    depends_on:
      - db

  order-service:
    image: ericamaya29/order-service:latest
    container_name: order-service
    ports:
      - '5052:5052'
    environment:
      - NODE_ENV=production 
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=ms_order
      - AUTH_SERVICE_URL=auth-service:5051
      - PRODUCT_SERVICE_URL=product-service:5053
    depends_on:
      - db

  product-service:
    image: ericamaya29/product-service:latest
    container_name: product-service
    ports:
      - '5053:5053'
    environment:
      - NODE_ENV=production 
      - DB_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@db:5432/ms_product
    depends_on:
      - db
  
  db:
    image: postgres:latest
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_USERNAME}
      POSTGRES_DB: ms_auth
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro

volumes:
  pgdata:
